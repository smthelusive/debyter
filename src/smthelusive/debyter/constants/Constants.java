package smthelusive.debyter.constants;

import java.util.HashMap;
import java.util.Map;

public class Constants {
    public static final String LOCALHOST = "127.0.0.1";
    public static final int PORT = 8000;
    public static final String JDWP_HANDSHAKE = "JDWP-Handshake";
    public static final int HANDSHAKE_SIZE = 14;
    public static final int EMPTY_FLAGS = 0;
    public static final int EMPTY_PACKET_SIZE = 11;
    public static final int LONG_LENGTH_BYTES = 8;
    public static final int SHORT_LENGTH_BYTES = 2;
    public static final int INTEGER_LENGTH_BYTES = 4;

    public static final Map<Byte, String> BYTECODE_OPERATIONS = new HashMap<>() {{
        put((byte) 50, "aaload");
        put((byte) 83, "aastore");
        put((byte) 1, "aconst_null");
        put((byte) 25, "aload");
        put((byte) 42, "aload_0");
        put((byte) 43, "aload_1");
        put((byte) 44, "aload_2");
        put((byte) 45, "aload_3");
        put((byte) 189, "anewarray");
        put((byte) 176, "areturn");
        put((byte) 190, "arraylength");
        put((byte) 58, "astore");
        put((byte) 75, "astore_0");
        put((byte) 76, "astore_1");
        put((byte) 77, "astore_2");
        put((byte) 78, "astore_3");
        put((byte) 191, "athrow");
        put((byte) 51, "baload");
        put((byte) 84, "bastore");
        put((byte) 16, "bipush");
        put((byte) 202, "breakpoint");
        put((byte) 52, "caload");
        put((byte) 85, "castore");
        put((byte) 192, "checkcast");
        put((byte) 144, "d2f");
        put((byte) 142, "d2i");
        put((byte) 143, "d2l");
        put((byte) 99, "dadd");
        put((byte) 49, "daload");
        put((byte) 82, "dastore");
        put((byte) 152, "dcmpg");
        put((byte) 151, "dcmpl");
        put((byte) 14, "dconst_0");
        put((byte) 15, "dconst_1");
        put((byte) 111, "ddiv");
        put((byte) 24, "dload");
        put((byte) 38, "dload_0");
        put((byte) 39, "dload_1");
        put((byte) 40, "dload_2");
        put((byte) 41, "dload_3");
        put((byte) 107, "dmul");
        put((byte) 119, "dneg");
        put((byte) 115, "drem");
        put((byte) 175, "dreturn");
        put((byte) 57, "dstore");
        put((byte) 71, "dstore_0");
        put((byte) 72, "dstore_1");
        put((byte) 73, "dstore_2");
        put((byte) 74, "dstore_3");
        put((byte) 103, "dsub");
        put((byte) 89, "dup");
        put((byte) 90, "dup_x1");
        put((byte) 91, "dup_x2");
        put((byte) 92, "dup2");
        put((byte) 93, "dup2_x1");
        put((byte) 94, "dup2_x2");
        put((byte) -115, "f2d");
        put((byte) -117, "f2i");
        put((byte) -116, "f2l");
        put((byte) 98, "fadd");
        put((byte) 48, "faload");
        put((byte) 81, "fastore");
        put((byte) -106, "fcmpg");
        put((byte) -107, "fcmpl");
        put((byte) 11, "fconst_0");
        put((byte) 12, "fconst_1");
        put((byte) 13, "fconst_2");
        put((byte) 110, "fdiv");
        put((byte) 23, "fload");
        put((byte) 34, "fload_0");
        put((byte) 35, "fload_1");
        put((byte) 36, "fload_2");
        put((byte) 37, "fload_3");
        put((byte) 106, "fmul");
        put((byte) 118, "fneg");
        put((byte) 114, "frem");
        put((byte) -82, "freturn");
        put((byte) 56, "fstore");
        put((byte) 67, "fstore_0");
        put((byte) 68, "fstore_1");
        put((byte) 69, "fstore_2");
        put((byte) 70, "fstore_3");
        put((byte) 102, "fsub");
        put((byte) -76, "getfield");
        put((byte) -78, "getstatic");
        put((byte) -89, "goto");
        put((byte) -56, "goto_w");
        put((byte) -111, "i2b");
        put((byte) -110, "i2c");
        put((byte) -121, "i2d");
        put((byte) -122, "i2f");
        put((byte) -123, "i2l");
        put((byte) -109, "i2s");
        put((byte) 96, "iadd");
        put((byte) 46, "iaload");
        put((byte) 126, "iand");
        put((byte) 79, "iastore");
        put((byte) 2, "iconst_m1");
        put((byte) 3, "iconst_0");
        put((byte) 4, "iconst_1");
        put((byte) 5, "iconst_2");
        put((byte) 6, "iconst_3");
        put((byte) 7, "iconst_4");
        put((byte) 8, "iconst_5");
        put((byte) 108, "idiv");
        put((byte) -91, "if_acmpeq");
        put((byte) -90, "if_acmpne");
        put((byte) -97, "if_icmpeq");
        put((byte) -94, "if_icmpge");
        put((byte) -93, "if_icmpgt");
        put((byte) -92, "if_icmple");
        put((byte) -95, "if_icmplt");
        put((byte) -96, "if_icmpne");
        put((byte) -103, "ifeq");
        put((byte) -100, "ifge");
        put((byte) -99, "ifgt");
        put((byte) -98, "ifle");
        put((byte) -101, "iflt");
        put((byte) -102, "ifne");
        put((byte) -57, "ifnonnull");
        put((byte) -58, "ifnull");
        put((byte) -124, "iinc");
        put((byte) 21, "iload");
        put((byte) 26, "iload_0");
        put((byte) 27, "iload_1");
        put((byte) 28, "iload_2");
        put((byte) 29, "iload_3");
        put((byte) -2, "impdep1");
        put((byte) -1, "impdep2");
        put((byte) 104, "imul");
        put((byte) 116, "ineg");
        put((byte) -63, "instanceof");
        put((byte) -70, "invokedynamic");
        put((byte) -71, "invokeinterface");
        put((byte) -73, "invokespecial");
        put((byte) -72, "invokestatic");
        put((byte) -74, "invokevirtual");
        put((byte) -128, "ior");
        put((byte) 112, "irem");
        put((byte) -84, "ireturn");
        put((byte) 120, "ishl");
        put((byte) 122, "ishr");
        put((byte) 54, "istore");
        put((byte) 59, "istore_0");
        put((byte) 60, "istore_1");
        put((byte) 61, "istore_2");
        put((byte) 62, "istore_3");
        put((byte) 100, "isub");
        put((byte) 124, "iushr");
        put((byte) -126, "ixor");
        put((byte) -88, "jsr†");
        put((byte) -55, "jsr_w†");
        put((byte) -118, "l2d");
        put((byte) -119, "l2f");
        put((byte) -120, "l2i");
        put((byte) 97, "ladd");
        put((byte) 47, "laload");
        put((byte) 127, "land");
        put((byte) 80, "lastore");
        put((byte) -108, "lcmp");
        put((byte) 9, "lconst_0");
        put((byte) 10, "lconst_1");
        put((byte) 18, "ldc");
        put((byte) 19, "ldc_w");
        put((byte) 20, "ldc2_w");
        put((byte) 109, "ldiv");
        put((byte) 22, "lload");
        put((byte) 30, "lload_0");
        put((byte) 31, "lload_1");
        put((byte) 32, "lload_2");
        put((byte) 33, "lload_3");
        put((byte) 105, "lmul");
        put((byte) 117, "lneg");
        put((byte) -85, "lookupswitch");
        put((byte) -127, "lor");
        put((byte) 113, "lrem");
        put((byte) -83, "lreturn");
        put((byte) 121, "lshl");
        put((byte) 123, "lshr");
        put((byte) 55, "lstore");
        put((byte) 63, "lstore_0");
        put((byte) 64, "lstore_1");
        put((byte) 65, "lstore_2");
        put((byte) 66, "lstore_3");
        put((byte) 101, "lsub");
        put((byte) 125, "lushr");
        put((byte) -125, "lxor");
        put((byte) -62, "monitorenter");
        put((byte) -61, "monitorexit");
        put((byte) -59, "multianewarray");
        put((byte) -69, "new");
        put((byte) -68, "newarray");
        put((byte) 0, "nop");
        put((byte) 87, "pop");
        put((byte) 88, "pop2");
        put((byte) -75, "putfield");
        put((byte) -77, "putstatic");
        put((byte) -87, "ret†");
        put((byte) -79, "return");
        put((byte) 53, "saload");
        put((byte) 86, "sastore");
        put((byte) 17, "sipush");
        put((byte) 95, "swap");
        put((byte) -86, "tableswitch");
        put((byte) -60, "wide");
        put((byte) -53, "(no name)");
    }};
}
